extern "C" {

get_instance_<component>_<interface>

get_instance_comm_server()
get_instance_comm_client()

}


(Factory)



directory structure:

Public interfaces:
include/<package>/<component>/<interface>.h[pp]
include/siox-ll/monitoring.h,optimization.h

All implementations are derived from:
include/core/component/component.hpp


Implementations:
<package>/<component>/module.h # Contains the interfaces required for the given component. All implementations of the given component should include this file.
<package>/<component>/<implementation>/module.c
<package>/<component>/<implementation>/<implementation>_<interface>.[c|cpp]
<package>/<component>/<implementation>/test/test.cpp


core/comm/tcp/tcp_client.cpp
core/comm/tcp/tcp_server.cpp





component.h
init(options)
get_options()
shutdown()

uncore.h
set_logging_target(logtarget)

