1.  Erzeugen einer sauberen Headerdatei.

      python siox-wrapper.py -b -c -o hdf5-example.h /usr/include/hdf5.h

2.  Nun können die einzelnen Annotationen vorgenommen werden.

    z.B.:

      //init
      //register_node IO-Server HDF5
      hid_t H5Fcreate (const char *filename, unsigned flags, hid_t create_plist, hid_t access_plist );

      Das vorligende header file ist mit einem splice_before
      an der der Function H5Fopen annotiert.

3.  Nun kann die annotierte Datei eingelesen werden und der C code erzeugt werden.

      python siox-wrapper.py -o hdf5-example/hdf.c hdf5-example/hdf5.h

    Die zu sehende Ausgabe ist eine Liste aller Funktionsnamen, die später an GCC weiter gegeben werden muss.

4.  In der Enstanden C-Datei muss der HDF5 include hinzugefügt werden.

      #include <hdf5.h>

5. Nun kann aus der C-Datei eine Bibliothek erzeugt werden.

      gcc -c filter-test.c
      gcc -c hdf5.c

      gcc -o filter-test-intercepted filter-test.o -lhdf5 hdf5.o <Ausgabe von dem siox-wrapper>

      gcc -o filter-test filter-test.o -lhdf5





