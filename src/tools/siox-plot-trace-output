#!/usr/bin/env python

import sys
import os

import matplotlib
#import numpy

import time
import imp

def main(argv):
    if len(argv) < 2:
        sys.stderr.write("Usage: %s <datafile> [pdf|png|X11] \n" % (argv[0]))
        return 1

    if not os.path.exists(argv[1]):
        sys.stderr.write("ERROR: Data file %r was not found!\n" % (argv[1]))
        return 1

    type = "png"

    if len(argv) == 3:
        type = argv[2]

    if type != "X11":
        # disable Xwindows
        matplotlib.use('Agg') 

    import matplotlib.pyplot as plt

    data = imp.load_source('data', argv[1])

    fig = plt.figure()
    ax = fig.add_subplot(111)


    ax.set_xlabel('time (in s)')
    ax.set_ylabel('offset (in Byte)')

    tstart = time.time()

    plt.ioff()

    #x = [[0,2,4],[1,3,5]]
    #y = [[2,3,4],[2,3,4]]

    # f = open('data.x1', 'w')
    # for x in range(0,10000):
    #     f.write(str(x*2) + "\t");
    # f.close()

    # y2 = numpy.loadtxt('data.y2')
    print 'Time for loading ', (time.time() - tstart), " s"

    tstart = time.time()

    plt.title( data.title )

    plt.plot( data.readX, data.readY, color='blue') 
    plt.plot( data.writeX, data.writeY, color='green') 

    #ax.set_xlim(-1,3)
    #ax.set_ylim(0,5)

    print 'Time for plotting ', (time.time() - tstart), " s"

    if type == "pdf":
        from matplotlib.backends.backend_pdf import PdfPages
        pp = PdfPages(data.filename + '.pdf')
        plt.savefig(pp, format='pdf')        
        pp.close()
    elif type == "X11":            
        plt.show()
    else:
        plt.savefig(data.filename + ".png")

    
    return 0

if __name__ == "__main__":
    sys.exit(main(sys.argv))
