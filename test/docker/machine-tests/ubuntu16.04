#!/bin/bash

BUILD="$1"
shift
CLEAN=0

ERROR=0

set -- `getopt -u -l "clean" -o "" -- "$@"`
test $# -lt 1  && exit 1
while test $# -gt 0
do
	case "$1" in
		--clean) CLEAN=1;;
		--) ;;
		*) echo "Unknown option $1"; exit 1;;
	esac
	shift
done

function runTest(){
  FLAVOR="$1"
  MPI_DIR="$2"
  echo $FLAVOR in $BUILD/$FLAVOR
  update-alternatives --set mpi $MPI_DIR
  if [[ $CLEAN == 1 ]] ; then
    echo "Cleaning"
    rm -rf $BUILD/$FLAVOR
  fi
  if [[ ! -e $BUILD/$FLAVOR/CMakeCache.txt ]] ; then
    ./configure --build-dir=$BUILD/$FLAVOR --debug || exit 1
  fi
  pushd $BUILD/$FLAVOR > /dev/null
  make || exit 1

  #define the alias
  ln -sf $(which mpiexec.$FLAVOR) /usr/bin/mpiexec

  ctest -C debug
  #if [[ $? != 0 ]] ; then
  #  cat Testing/Temporary/LastTest.log
  #fi
  ERROR=$(($ERROR + $?))
  popd  > /dev/null
}

# /etc/init.d/postgresql start

if false ; then
	for I in $(seq 1 30); do
		/etc/init.d/postgresql status
		su - postgres -c "echo CREATE DATABASE ROOT OWNER ROOT | psql" 2>&1
		if [[ $? == 0 ]] ; then
			break;
		fi
		sleep 1
	done
fi

export MPI_ARGS="--allow-run-as-root"
runTest openmpi /usr/lib/openmpi/include
export MPI_ARGS=""
runTest mpich /usr/include/mpich

#/etc/init.d/postgresql stop

exit $ERROR
